steps:
  # Step 1: Clone the repository
  - name: 'gcr.io/cloud-builders/git'
    args: ['clone', 'https://github.com/pavigodj/playwright_gcloud.git', '/workspace/repo']
    id: 'Clone Repository'

  # Step 2: Build Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-t', 'gcr.io/$PROJECT_ID/playwright', 
      '/workspace/repo'
    ]
    id: 'Build Docker Image'

  # Step 3: Run pytest inside the Docker container
  - name: 'gcr.io/$PROJECT_ID/playwright'  # Use the image built in the previous step
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        pytest --alluredir=/workspace/allure-results
    id: 'Run Tests with Allure'

  # Step 4: Generate Allure Report
  - name: 'frankescobar/allure-docker-service'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        mkdir -p /tmp/allure-report && \
        allure generate /workspace/allure-results -o /tmp/allure-report && \
        ls -al /tmp/allure-report
    id: 'Generate Allure Report'

  # Step 5: List the contents of the allure report directory
  - name: 'frankescobar/allure-docker-service'  # Use the same Allure image
    entrypoint: 'bash'
    args:
      - '-c'
      - 'ls -al /tmp/allure-report'  # List the contents of the allure-report directory
    id: 'List Allure Report Contents'

  # Step 6: Upload Allure Report to GCS
  - name: 'gcr.io/cloud-builders/gsutil'
    args:
      - '-m'
      - 'cp'
      - '-r'
      - '/tmp/allure-report'
      - 'gs://playwright_logs/allure-reports'
    id: 'Upload Allure Report to GCS'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'  # Optional: Choose a machine type for the build

substitutions:
  _BUCKET_NAME: 'playwright_logs'  # Replace with your GCS bucket name

timeout: '900s'

